<?xml version="1.0" encoding="UTF-8"?>
<project name="acmetelecom" default="all">
  
  
  <property file="AcmeTestsuite.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
  <path id="jdk.classpath.1.6">
    <fileset dir="${jdk.home.1.6}">
      <include name="lib/deploy.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javaws.jar"/>
      <include name="lib/jce.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/management-agent.jar"/>
      <include name="lib/plugin.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="../Classes/alt-rt.jar"/>
      <include name="../Classes/alt-string.jar"/>
      <include name="../Classes/charsets.jar"/>
      <include name="../Classes/classes.jar"/>
      <include name="../Classes/jsse.jar"/>
      <include name="../Classes/ui.jar"/>
      <include name="lib/ext/apple_provider.jar"/>
      <include name="lib/ext/dnsns.jar"/>
      <include name="lib/ext/localedata.jar"/>
      <include name="lib/ext/sunjce_provider.jar"/>
      <include name="lib/ext/sunpkcs11.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.6}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>
  
  
  <!-- Global Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module AcmeTelecom -->
  
  <dirname property="module.acmetelecom.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.acmetelecom" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.acmetelecom" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.acmetelecom" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.acmetelecom" value="${compiler.args}"/>
  
  <property name="acmetelecom.output.dir" value="${module.acmetelecom.basedir}/out/production/AcmeTelecom"/>
  <property name="acmetelecom.testoutput.dir" value="${module.acmetelecom.basedir}/out/test/AcmeTelecom"/>
  
  <path id="acmetelecom.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="acmetelecom.module.production.classpath">
    <path refid="${module.jdk.classpath.acmetelecom}"/>
    <pathelement location="${basedir}/lib/external.jar"/>
    <pathelement location="${basedir}/lib/junit-dep-4.8.2.jar"/>
    <pathelement location="${basedir}/lib/jmock/objenesis-1.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit3-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit4-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/cglib-nodep-2.1_3.jar"/>
    <pathelement location="${basedir}/lib/jmock/hamcrest-core-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock-junit4-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/junit-4.8.2-src.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-library-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-legacy-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-unfinalizer-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-junit4-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-commons-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-tree-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-core-1.1.jar"/>
  </path>
  
  <path id="acmetelecom.runtime.production.module.classpath">
    <pathelement location="${acmetelecom.output.dir}"/>
    <pathelement location="${basedir}/lib/external.jar"/>
    <pathelement location="${basedir}/lib/junit-dep-4.8.2.jar"/>
    <pathelement location="${basedir}/lib/jmock/objenesis-1.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit3-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit4-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/cglib-nodep-2.1_3.jar"/>
    <pathelement location="${basedir}/lib/jmock/hamcrest-core-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock-junit4-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/junit-4.8.2-src.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-library-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-legacy-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-unfinalizer-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-junit4-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-commons-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-tree-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-core-1.1.jar"/>
  </path>
  
  <path id="acmetelecom.module.classpath">
    <path refid="${module.jdk.classpath.acmetelecom}"/>
    <pathelement location="${acmetelecom.output.dir}"/>
    <pathelement location="${basedir}/lib/external.jar"/>
    <pathelement location="${basedir}/lib/junit-dep-4.8.2.jar"/>
    <pathelement location="${basedir}/lib/jmock/objenesis-1.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit3-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit4-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/cglib-nodep-2.1_3.jar"/>
    <pathelement location="${basedir}/lib/jmock/hamcrest-core-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock-junit4-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/junit-4.8.2-src.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-library-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-legacy-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-unfinalizer-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-junit4-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-commons-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-tree-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-core-1.1.jar"/>
  </path>
  
  <path id="acmetelecom.runtime.module.classpath">
    <pathelement location="${acmetelecom.testoutput.dir}"/>
    <pathelement location="${acmetelecom.output.dir}"/>
    <pathelement location="${basedir}/lib/external.jar"/>
    <pathelement location="${basedir}/lib/junit-dep-4.8.2.jar"/>
    <pathelement location="${basedir}/lib/jmock/objenesis-1.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit3-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-junit4-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/cglib-nodep-2.1_3.jar"/>
    <pathelement location="${basedir}/lib/jmock/hamcrest-core-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock-junit4-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/junit-4.8.2-src.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-library-1.3.0RC1.jar"/>
    <pathelement location="${basedir}/lib/jmock-2.6.0-RC2.jar"/>
    <pathelement location="${basedir}/lib/jmock/jmock-legacy-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-unfinalizer-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-junit4-1.1.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-commons-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/asm-tree-3.0.jar"/>
    <pathelement location="${basedir}/lib/jmock/jdave-core-1.1.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.acmetelecom">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.acmetelecom">
    <patternset refid="excluded.from.module.acmetelecom"/>
  </patternset>
  
  <path id="acmetelecom.module.sourcepath">
    <dirset dir="${module.acmetelecom.basedir}">
      <include name="src"/>
      <include name="fakes"/>
    </dirset>
  </path>
  
  <path id="acmetelecom.module.test.sourcepath">
    <dirset dir="${module.acmetelecom.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.acmetelecom" depends="compile.module.acmetelecom.production,compile.module.acmetelecom.tests" description="Compile module AcmeTelecom"/>
  
  <target name="compile.module.acmetelecom.production" description="Compile module AcmeTelecom; production classes">
    <mkdir dir="${acmetelecom.output.dir}"/>
    <javac destdir="${acmetelecom.output.dir}" debug="${compiler.debug}" includeantruntime="false" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.acmetelecom}/javac">
      <compilerarg line="${compiler.args.acmetelecom}"/>
      <bootclasspath refid="acmetelecom.module.bootclasspath"/>
      <classpath refid="acmetelecom.module.production.classpath"/>
      <src refid="acmetelecom.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.acmetelecom"/>
    </javac>
    
    <copy todir="${acmetelecom.output.dir}">
      <fileset dir="${module.acmetelecom.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.acmetelecom.basedir}/fakes">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.acmetelecom.tests" depends="compile.module.acmetelecom.production" description="compile module AcmeTelecom; test classes" unless="skip.tests">
    <mkdir dir="${acmetelecom.testoutput.dir}"/>
    <javac destdir="${acmetelecom.testoutput.dir}" debug="${compiler.debug}" includeantruntime="false" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.acmetelecom}/javac">
      <compilerarg line="${compiler.args.acmetelecom}"/>
      <bootclasspath refid="acmetelecom.module.bootclasspath"/>
      <classpath refid="acmetelecom.module.classpath"/>
      <src refid="acmetelecom.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.acmetelecom"/>
    </javac>
    
    <copy todir="${acmetelecom.testoutput.dir}">
      <fileset dir="${module.acmetelecom.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.acmetelecom" description="cleanup module">
    <delete dir="${acmetelecom.output.dir}"/>
    <delete dir="${acmetelecom.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.acmetelecom" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.acmetelecom" description="build all modules"/>

  <target name="unittest" description="Execute unit tests"
          depends="build.modules">
    <mkdir dir="tmp/rawtestoutput"/>
    <junit fork="true" forkmode="once" printsummary="true" failureproperty="junit.failure">
        <jvmarg value="-javaagent:${basedir}/lib/jmock/jdave-unfinalizer-1.1.jar"/>
      <!-- N.b. use failureproperty instead of haltonfailure, because if we use
           the former, we will get no detailed report about the failure.
           If the test fails, the fail element below will still assure that
           the Ant run will exit with error status.
      -->
      <classpath>
                <pathelement location="${basedir}/lib/external.jar"/>
                <pathelement location="${basedir}/lib/junit-dep-4.8.2.jar"/>
                <pathelement location="${basedir}/lib/jmock/objenesis-1.0.jar"/>
                <pathelement location="${basedir}/lib/jmock/jmock-junit3-2.5.1.jar"/>
                <pathelement location="${basedir}/lib/hamcrest-core-1.3.0RC1.jar"/>
                <pathelement location="${basedir}/lib/jmock/jmock-junit4-2.5.1.jar"/>
                <pathelement location="${basedir}/lib/jmock/cglib-nodep-2.1_3.jar"/>
                <pathelement location="${basedir}/lib/jmock/hamcrest-core-1.1.jar"/>
                <pathelement location="${basedir}/lib/jmock-junit4-2.6.0-RC2.jar"/>
                <pathelement location="${basedir}/lib/junit-4.8.2-src.jar"/>
                <pathelement location="${basedir}/lib/hamcrest-library-1.3.0RC1.jar"/>
                <pathelement location="${basedir}/lib/jmock-2.6.0-RC2.jar"/>
                <pathelement location="${basedir}/lib/jmock/jmock-legacy-2.5.1.jar"/>
                <pathelement location="${basedir}/lib/jmock/jdave-unfinalizer-1.1.jar"/>
                <pathelement location="${basedir}/lib/jmock/jdave-junit4-1.1.jar"/>
                <pathelement location="${basedir}/lib/jmock/asm-3.0.jar"/>
                <pathelement location="${basedir}/lib/jmock/asm-commons-3.0.jar"/>
                <pathelement location="${basedir}/lib/jmock/asm-tree-3.0.jar"/>
                <pathelement location="${basedir}/lib/jmock/jdave-core-1.1.jar"/>
                <pathelement location="${acmetelecom.testoutput.dir}"/>
                <pathelement location="${acmetelecom.output.dir}"/>
      </classpath>
      <!-- Ant provides several ways to set the classpath.  The critical thing
           is just that the final classpath for the junit task must include
           the junit-4.x jar file, the test classes, and all classes referred
           to directly or indirectly by your test classes.  -->

      <batchtest todir="tmp/rawtestoutput">
        <fileset dir="${acmetelecom.testoutput.dir}" includes="**/*Test.class" excludes="**/*$*.class" />
        <formatter type="xml"/>
      </batchtest>
      <!-- In the unlikely case that you just have a single test class,
           use a test element like this instead of the batchtest element
           above:   <test name='com.admc.jamama.smtp.SMTPTest'/>
           You can nest the formatter inside it, just like batchtest.
      -->

      <!-- You can use sysproperty elements to pass configuration settings
           to your test classes, or to appplication classes they will run:
     <sysproperty key="targetserver.test" value="mercedes"/>
     -->
    </junit>
    <junitreport todir="tmp">
      <fileset dir="tmp/rawtestoutput"/>
      <report todir="test-reports"/>
    </junitreport>
    <fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
  </target>
  
  <target name="all" depends="build.modules,unittest" description="build all"/>
</project>